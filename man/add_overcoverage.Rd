% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/generate_synthetic_dataset.R
\name{add_overcoverage}
\alias{add_overcoverage}
\title{Function to apply overcoverage}
\usage{
add_overcoverage(
  dataset,
  formula_target,
  coefficients_target,
  clustering_var = NULL,
  clusters_sd_target = NULL,
  seed = NULL
)
}
\arguments{
\item{dataset}{A data.frame of covariates, each row representing an
individual.}

\item{formula_target}{A formula for the fixed effects in the linear component
of the logistic model for the target inclusion indicator.}

\item{coefficients_target}{A named numeric vector specifying the coefficients
of the target inclusion logistic model.}

\item{clustering_var}{A string representing the name of the clustering
variable in the base dataset. (Defaults to \code{NULL}.)}

\item{clusters_sd_target}{A numeric (positive) scalar specifying the standard
deviation of the cluster effects of the logistic target inclusion model. 
(Defaults to \code{NULL}.)}

\item{seed}{An integer specifying the seed for the random number generator.
(Defaults to \code{NULL}.)}
}
\value{
The input data.frame of covariates with a logical target inclusion
  indicator column named \code{in_target}.
}
\description{
Given a dataset, this function generates a target inclusion indicator to 
simulate overcoverage with respect to the target population.
}
\details{
The names of the elements of the coefficients vector (\code{coefficients}) 
must be a subset of the column names of the design matrix created using the 
corresponding model formula (\code{model_formula}).

If a clustering variable is specified, then a \code{"cluster_target"} index
column is added to the dataset.
}
\examples{
base_dataset   <- expand.grid(sex       = c("M", "F"),
                              income    = seq(0, 50000, 10000),
                              age_grp   = as.character(1:5),
                              region    = letters[1:8],
                              ethnicity = LETTERS[1:5])

union_dataset  <- generate_dataset(n            = 1000,
                                   base_dataset = base_dataset)

formula_target <- ~ sex + income + age_grp + ethnicity

get_dummified_names(dataset       = base_dataset, 
                    model_formula = formula_target)

coefficients_target <- c(`(Intercept)` = 0.75,
                         sexF          = 0.4, 
                         age_grp2      = 0.5,
                         age_grp3      = 0.3,
                         ethnicityC    = 0.6,
                         ethnicityD    = 0.5)

union_dataset <- add_overcoverage(dataset             = union_dataset,
                                  formula_target      = formula_target,
                                  coefficients_target = coefficients_target,
                                  clustering_var      = "region",
                                  clusters_sd_target  = 0.25)
head(union_dataset)
table(union_dataset[["in_target"]])

}
