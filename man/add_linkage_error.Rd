% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/generate_synthetic_dataset.R
\name{add_linkage_error}
\alias{add_linkage_error}
\title{Function to apply linkage error to observed dataset}
\usage{
add_linkage_error(
  dataset,
  formula_sens,
  coefficients_sens,
  seed = NULL,
  n_validated = NULL
)
}
\arguments{
\item{dataset}{A data.frame of covariates and cell indicators. (This is the
observed data, i.e. it does not include records from cell (0,0).)}

\item{formula_sens}{A formula, the sensitivity model (used for generating the
observed links binary indicator).}

\item{coefficients_sens}{A named numeric vector specifying the coefficients
of the sensitivity model.}

\item{seed}{An integer specifying the seed for the random number generator.
(Defaults to \code{NULL}.)}

\item{n_validated}{An integer specifying the size of the validation sample.
(Defaults to \code{NULL}.)}
}
\value{
A data.frame of covariates and cell indicators with linkage error.
  (True cell and list indicators are also returned only for the purpose of
  comparison/testing.)
}
\description{
This function generates missed link indicators to simulate linkage error in
the given observed dataset: the observed dataset is extended with the matches
for the missed links.
}
\details{
Specificity is assumed to be 1 (i.e. no false positive links).

If \code{n_validated} is specified, then linkage error correction is made to
a random sample of size \code{n_validated}, to simulate the linkage
validation study.

The names of the elements of the coefficients vector (\code{coefficients})
must be a subset of the column names of the design matrix created using the
sensitivity model formula (\code{formula}).
}
\examples{
n_target <- 10000
n_union  <- n_target + 1000

base_dataset <- expand.grid(sex       = c("M", "F"),
                            income    = seq(0, 50000, 10000),
                            age_grp   = as.character(1:5),
                            region    = letters[1:8],
                            ethnicity = LETTERS[1:5])

union_dataset <- generate_dataset(n            = n_union,
                                  base_dataset = base_dataset)

union_dataset[["in_target"]] <- c(rep(TRUE, n_target), 
                                  rep(FALSE, n_union - n_target))

formula_cover  <- ~ sex + income + age_grp + ethnicity
get_dummified_names(dataset       = base_dataset, 
                    model_formula = formula_cover)

coefficients   <- c(`(Intercept)` = 0.1,
                    sexF          = 0.75, 
                    age_grp2      = -0.4,
                    age_grp3      = -0.2,
                    ethnicityC    = 1.2,
                    ethnicityD    = -0.5)

union_dataset <- add_undercoverage(dataset           = union_dataset,
                                   formula1          = formula_cover,
                                   formula2          = formula_cover, 
                                   coefficients1     = coefficients,
                                   coefficients2     = coefficients,
                                   clustering_var    = "region",
                                   clusters_sd1      = 0.8,
                                   clusters_sd2      = 0.9,
                                   has_overcoverage  = TRUE)

make_coverage_summary(union_dataset)

formula_sens      <- ~ sex + ethnicity
coefficients_sens <- c(`(Intercept)` = 0.8,
                       sexF          = 0.1)

obs_dataset    <- union_dataset[!union_dataset[["Y00"]], ]
obs_dataset_LE <- add_linkage_error(dataset           = obs_dataset,
                                    formula_sens      = formula_sens,
                                    coefficients_sens = coefficients_sens,
                                    n_validated       = 1000)
                                    
## Checks
xtabs(~ Y11, data = subset(obs_dataset, Y11 | Y10))
xtabs(~ YLE11 + Y11, data = subset(obs_dataset_LE, YLE11 | YLE10))

all(xtabs(~ Y11, data = subset(obs_dataset, Y11 | Y10)) ==
    colSums(xtabs(~ YLE11 + Y11, data = subset(obs_dataset_LE, YLE11 | YLE10))))

}
